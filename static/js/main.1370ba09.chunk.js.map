{"version":3,"sources":["../../src/githubApi.js","../../src/index.js","App.js","index.js"],"names":["GithubApi","getUser","username","fetch","res","getFollowers","getFollowing","getOrgs","ReactGithubProfileShowcase","props","useState","githubProfileObj","setGithubProfileObj","orgs","setOrgs","infoTextCss","width","whiteSpace","overflow","textOverflow","useEffect","console","theme","_","cardThemeCss","pillThemeCss","className","Card","fluid","roundedCircle","variant","src","style","color","rel","target","href","userName","title","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1370ba09.chunk.js","sourcesContent":["class GithubApi {\n\n    getUser(username = '') {\n\n        return fetch(`https://api.github.com/users/${username}`).then(res => res.json())\n    }\n\n    getFollowers(username = '') {\n\n        return fetch(`https://api.github.com/users/${username}/followers`).then(res => res.json())\n    }\n\n    getFollowing(username = '') {\n\n        return fetch(`https://api.github.com/users/${username}/following`).then(res => res.json())\n    }\n    getOrgs(username = '') {\n\n        return fetch(`https://api.github.com/users/${username}/orgs`).then(res => res.json())\n    }\n\n}\n\nexport default new GithubApi();","import React, { useEffect} from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useState } from 'react'\nimport GithubApi from './githubApi'\nimport Card from 'react-bootstrap/Card'\nimport Badge from 'react-bootstrap/Badge'\nimport Image from 'react-bootstrap/Image'\nimport _ from 'lodash';\n\nexport const ReactGithubProfileShowcase = props => {\n\n  const [githubProfileObj, setGithubProfileObj] = useState({});\n  const [followers, setFollowers] = useState([])\n  const [following, setFollowing] = useState([])\n  const [orgs, setOrgs] = useState([])\n  const infoTextCss = {\n    width: '100%',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis'\n  }\n  useEffect(() => {\n    GithubApi.getUser(props.userName)\n    .then(res => {\n      console.log(res)\n      setGithubProfileObj(res)\n    })\n\n    GithubApi.getOrgs(props.userName)\n    .then(res => {\n      console.log(res)\n      setOrgs(res)\n    })\n  },[])\n\n  const onShowFollowersCick = () => {\n    GithubApi.getFollowers(props.userName)\n    .then(res => {\n      setFollowers(res)\n    })\n\n  }\n\n  const onShowFollowingCick = () => {\n    GithubApi.getFollowing(props.userName)\n    .then(res => {\n      console.log(res)\n      setFollowing(res)\n    })\n\n  }\n  const theme = _.get(props, 'theme', 'light');\n  const cardThemeCss = _.isEqual(theme, 'dark')? 'bg-dark text-white' : ''\n  const pillThemeCss = _.isEqual(theme, 'dark')? 'light' : 'dark'\n  return <div className='d-flex flex-wrap'><Card className={cardThemeCss}>\n  <Card.Img fluid roundedCircle variant=\"top\" src={_.get(githubProfileObj, 'avatar_url', '')} />\n  <Card.Body>\n<Card.Title>{_.get(githubProfileObj, 'name')}</Card.Title>\n    <Card.Text>\n      {_.get(githubProfileObj, 'bio', '')}\n      <div className='d-flex flex-column flex-wrap'>\n{_.get(githubProfileObj, 'blog') ? <div style={infoTextCss}><b>blog:</b> <a style={{color: '#58a6ff'}} rel=\"noopener noreferrer\" target='_blank' href={_.get(githubProfileObj, 'blog')}>{_.get(githubProfileObj, 'blog')}</a></div> : null}\n\n{_.get(githubProfileObj, 'company') ? <div style={infoTextCss}><b>company:</b> {_.get(githubProfileObj, 'company')}</div> : null}\n\n{_.get(githubProfileObj, 'twitter_username') ? <div style={infoTextCss}><b>twitter:</b> <a  style={{color: '#58a6ff'}} rel=\"noopener noreferrer\" target='_blank' href={`https://twitter.com/${_.get(githubProfileObj, 'twitter_username')}`}>{_.get(githubProfileObj, 'twitter_username')}</a></div> : null}\n\n{_.get(githubProfileObj, 'email') ? <div style={infoTextCss}><b>email:</b> <a href={`mailto:${_.get(githubProfileObj, 'email')}`}>{_.get(githubProfileObj, 'email')}</a></div> : null}\n\n{_.get(githubProfileObj, 'location') ? <div style={infoTextCss}><b>location:</b> <a style={{color: '#58a6ff'}} rel=\"noopener noreferrer\" target='_blank' href={`https://www.google.com/maps/place/${_.get(githubProfileObj, 'location')}`}>{_.get(githubProfileObj, 'location')}</a></div> : null}\n\n<br />\n<div className='d-flex justify-content-around flex-wrap'>\n\n<a className='pr-2' rel=\"noopener noreferrer\" target='_blank' href={`https://github.com/${props.userName}?tab=followers`}><Badge variant={pillThemeCss}>Followers {_.get(githubProfileObj, 'followers') }</Badge>\n</a>\n\n<a className='pr-2' rel=\"noopener noreferrer\" target='_blank' href={`https://github.com/${props.userName}?tab=following`}><Badge variant={pillThemeCss}>Following {_.get(githubProfileObj, 'following') }</Badge>\n</a>\n<a className='pr-2' rel=\"noopener noreferrer\" target='_blank' href={`https://github.com/${props.userName}?tab=repositories`}><Badge variant={pillThemeCss}>Public Repos {_.get(githubProfileObj, 'public_repos') }</Badge>\n</a>\n<a className='pr-2' rel=\"noopener noreferrer\" target='_blank' href={`https://gist.github.com/${props.userName}`}><Badge variant={pillThemeCss}>Public Gists {_.get(githubProfileObj, 'public_gists') }</Badge>\n</a>\n</div>\n<br/>\n<div className='d-flex flex-wrap'>\n{orgs.map((org) => {\n  return <a rel=\"noopener noreferrer\" target='_blank' href={`https://github.com/${_.get(org, 'login')}`} title={`${_.get(org, 'login')}`}><Image className='pr-1' style={{width: '50px'}} src={_.get(org, 'avatar_url')} fluid roundedCircle /></a>\n})}\n</div>\n<br />\n\n\n<a rel=\"noopener noreferrer\" target='_blank' className='btn btn-primary' href={_.get(githubProfileObj, 'html_url')}>Visit profle</a>\n      </div>\n    </Card.Text>\n  </Card.Body>\n</Card></div>\n}","import React from 'react'\n\nimport { ReactGithubProfileShowcase } from 'react-github-profile-showcase'\nimport 'react-github-profile-showcase/dist/index.css'\n\nconst App = () => {\n  return <div><ReactGithubProfileShowcase userName='abhishekori' theme='light' /></div>\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}